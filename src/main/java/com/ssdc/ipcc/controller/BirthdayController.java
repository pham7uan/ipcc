package com.ssdc.ipcc.controller;

import com.ssdc.ipcc.common.Util;
import com.ssdc.ipcc.entities.Birthday;
import com.ssdc.ipcc.entities.BirthdayRepository;
import com.ssdc.ipcc.entities.Survey;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/api/birthday") // This means URL's start with /demo (after Application path)
public class BirthdayController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private BirthdayRepository birthdayRepository;

    @GetMapping(path="/import") // Map ONLY GET Requests
    public @ResponseBody
    String importBirthday() {
        String log = "Import result\n";
        String errorLog ="Import fail in: \n";
        Integer numSuccess = 0;
        Integer numFail = 0;
        Integer total =0;
        Integer [] notNulls = {1,2,3,4,6,7,12};
        ArrayList<Integer> notNullList = new ArrayList<Integer>(Arrays.asList(notNulls));

        String FILE_NAME = "birthday.xlsx";
        try{
            FileInputStream excelFile = new FileInputStream(new File(FILE_NAME));
            Workbook workbook = new XSSFWorkbook(excelFile);
            Sheet datatypeSheet = workbook.getSheetAt(0);
            int numOfRows=datatypeSheet.getPhysicalNumberOfRows();
            total = numOfRows -2;
            for(int rowNum=2;rowNum<numOfRows;rowNum++){
                Row row=datatypeSheet.getRow(rowNum);
                int numOfCellPerRow=row.getLastCellNum();
                Object[] data = new Object[15];
                boolean validate = true;
                for(int cellNum=0;cellNum<numOfCellPerRow;cellNum++){
                    Cell currentCell=row.getCell(cellNum);
                    if (currentCell != null){
                        if (currentCell.getCellTypeEnum() == CellType.STRING) {
                            data[cellNum] = currentCell.getStringCellValue();
                        } else if (currentCell.getCellTypeEnum() == CellType.NUMERIC) {
                            if (cellNum == 2 || cellNum ==4 || cellNum ==5){
                                data[cellNum] = Integer.toString((int)currentCell.getNumericCellValue());
                            } else {
                                data[cellNum] = (int)currentCell.getNumericCellValue();
                            }
                        }

                    } else {
                        if (notNullList.contains(cellNum)){
                            errorLog = errorLog + " -Line "+rowNum + ". Column "+cellNum+" is null.\n";
                            validate = false;
                            numFail++;
                            break;
                        }
                    }
                }

                if (!validate){
                    System.out.println(errorLog);
                    continue;
                }
                int maxChainId = birthdayRepository.getMaxChaniId();
                data[0] =  birthdayRepository.getMaxRecordId() + 1;
                System.out.println("ID: "+data[0]);

                if (data[8] == null){
                    data[8] = data[9];
                }

                if (data[10] == null){
                    data[10] = "Banh kem";
                } else {
                    data[10] = "Hoa";
                }

                if (data[4] != null && data[5] != null){
                    data[13] =maxChainId +1;
                    data[14] =0;
                    Birthday s = new Birthday(data);
//                    for (int i =0; i<15;i++){
//                        System.out.println("object "+i+" :"+data[i]);
//                    }
                        birthdayRepository.save(s);
                    data[0] = (Integer)data[0] +1;
                    data[4] = data[5];
                    data[14] = (Integer)data[14] +1;
                    Birthday s2 = new Birthday(data);
//                    for (int i =0; i<15;i++){
//                        System.out.println("object "+i+" :"+data[i]);
//                    }
                        birthdayRepository.save(s2);
                } else {
                    data[13] =maxChainId +1;
                    data[14] =0;
                    Birthday s = new Birthday(data);
//                    for (int i =0; i<15;i++){
//                        System.out.println("object "+i+" :"+data[i]);
//                    }
                        birthdayRepository.save(s);
                }
                numSuccess++;
            }
//            Iterator<Row> iterator = datatypeSheet.iterator();
//            int row = 0;
//            while (iterator.hasNext()) {
//                Row currentRow = iterator.next();
//                Iterator<Cell> cellIterator = currentRow.iterator();
//                if (row >1){
//                    int col = 0;
//                    Object[] data = new Object[15];
//                    while (cellIterator.hasNext()) {
//                        if (col < 13) {//number column need to import
//                            Cell currentCell = cellIterator.next();
//                            if (currentCell.getCellTypeEnum() == CellType.STRING) {
//                                data[col] = currentCell.getStringCellValue();
////                                System.out.println("string "+col+": "+currentCell.getStringCellValue());
//                            } else if (currentCell.getCellTypeEnum() == CellType.NUMERIC) {
//                                if (col == 2 || col ==4 || col ==5){
//                                    data[col] = Integer.toString((int)currentCell.getNumericCellValue());
//                                } else {
//                                    data[col] = (int)currentCell.getNumericCellValue();
//                                }
//                            }
//                        }
//                        col ++;
//                    }
//
//
//
//                }
//                row++;
//            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        log = log + "- Import success "+numSuccess+"/"+total+".\n";
        log = log + " -Import fail "+numFail+"/"+total+".\n";
        if (numFail>0){
            log = log + errorLog;
        }
        System.out.println(log);
        return log;
    }
}
